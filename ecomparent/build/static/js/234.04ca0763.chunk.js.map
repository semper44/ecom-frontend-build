{"version":3,"file":"static/js/234.04ca0763.chunk.js","mappings":"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","sources":["components/admin/Users.js","webpack:///./src/components/admin/usersandproducts.module.css?f697"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { DataGrid} from \"@mui/x-data-grid\";\r\nimport DeleteOutlinedIcon from \"@mui/icons-material/DeleteOutlined\";\r\nimport { Avatar, Box, IconButton, Typography } from \"@mui/material\";\r\nimport axios from \"axios\";\r\nimport Delete from \"./DeleteComp\";\r\nimport styles from \"./usersandproducts.module.css\"\r\nimport { GridToolbarContainer,\r\n  GridToolbarDensitySelector,\r\n  GridToolbarExport, } from \"@mui/x-data-grid\";\r\n  import { GridToolbarQuickFilter } from \"@mui/x-data-grid\";\r\nimport { GridToolbarColumnsButton } from \"@mui/x-data-grid\";\r\nimport { GridToolbarFilterButton } from \"@mui/x-data-grid\";\r\n// import { GridToolbarDensitySelector } from \"@mui/x-data-grid\";\r\n// import {Link} from \"react-router-dom\"\r\nimport { ThemeData } from \"../../App\";\r\nimport Loading from \"../extra comp/Loading\";\r\nimport { screensizecontext } from \"../../stores/CartContxt\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\n// http://127.0.0.1:8000/\r\n\r\n\r\n\r\nfunction AllProduct() {\r\n  const [productData, setproductData] = useState(\"\");\r\n  const [deleteState, setdeleteState] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  // const [fullscreen, setFullscreen] = useState(false);\r\n  const [id, setdId] = useState(null);\r\n  const {theme}= useContext(ThemeData)\r\n  const {dontdisplay, gridlg, gridxl, gridxlxl}= useContext(screensizecontext)\r\n  const location= useLocation()\r\n  let fullscreen= false\r\n  const{pathname}=location\r\n\r\n  if(pathname.includes(\"fullpage\")){\r\n    fullscreen=true\r\n  }else{\r\n    fullscreen=false\r\n\r\n  }\r\n  \r\n  // const fullscreen=false\r\n  const getData= async()=>{\r\n    try{\r\n      const res= await axios.get(`${process.env.REACT_APP_URLS}/product/getproduct`)\r\n      if(res.status===200){\r\n        ;\r\n        setLoading(false)\r\n        setproductData(res.data)\r\n      }\r\n\r\n    }catch(error){\r\n      setLoading(false)\r\n      setError(error)\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(()=>{\r\n    window.location.pathname===\"/users\"&&getData()\r\n  },[])\r\n\r\n\r\n\r\n  function del(params) {\r\n    setdeleteState(true)\r\n    setdId(params.id)\r\n  }\r\n\r\n  const columns = [\r\n    { field: \"id\", headerName: \"ID\", hide: \"true\" },\r\n    {\r\n      field: \"image\",\r\n      headerName: \"PICS\",\r\n      filterable: false,\r\n      width:dontdisplay?60: undefined,\r\n      flex:dontdisplay?0: 1,\r\n      renderCell: (params) => {\r\n        // ;\r\n        return <Avatar src={params.row.image} />;\r\n      },\r\n    },\r\n    { field: \"name\", headerName: \"NAME\", flex: 1 },\r\n\r\n    {\r\n      field: \"access\",\r\n      headerName: \"Access\",\r\n      filterable: false,\r\n      flex: 1,\r\n      width:dontdisplay?20:undefined,\r\n      renderCell: (params) => {\r\n        return (\r\n          <Box\r\n            // width=\"20%\"\r\n            m={dontdisplay?\"0 0\":\"7px 2%\"}\r\n            p={dontdisplay?\"0 \":\"5px\"}\r\n            diplay=\"flex\"\r\n            justifyContent=\"center\"\r\n            gap=\"0\"\r\n          >\r\n            {/* prevous logic that links to a new page */}\r\n            {/* <IconButton\r\n              aria-label=\"Edit\"\r\n              size=\"small\"\r\n              className=\"\"\r\n              component={Link}\r\n              to= {`/admin/editproducts/${params.id}`} \r\n            >\r\n              <EditOutlinedIcon sx={{color:theme?\"cyan\":undefined}} />\r\n              <Typography color={\"grey\"} sx={{ ml: \"5px\" }}>\r\n                Edit\r\n              </Typography>\r\n            </IconButton> */}\r\n            <IconButton\r\n              aria-label=\"Delete\"\r\n              size=\"small\"\r\n              className=\"\"\r\n              onClick={()=>del(params)}\r\n            >\r\n              <DeleteOutlinedIcon sx={{color:theme?\"red\":undefined}}/>\r\n              <Typography color={\"grey\"} sx={{ ml: \"5px\" }}>\r\n                Delete\r\n              </Typography>\r\n            </IconButton>\r\n            {deleteState &&<Delete setdelete={setdeleteState} url={`${process.env.REACT_APP_URLS}/product/admin/deleteproduct/${id}`} type={\"admin\"}/>}\r\n          </Box>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  useEffect(()=>{document.title=\"Users\"\r\n    },[])\r\n    \r\n  function CustomToolbar() {\r\n    return (\r\n      <GridToolbarContainer>\r\n        <GridToolbarColumnsButton />\r\n        <GridToolbarFilterButton />\r\n        {(!dontdisplay && ((gridlg &&fullscreen)||(gridxl && gridlg)))&&<GridToolbarQuickFilter />}\r\n        {((!dontdisplay && gridlg) || fullscreen) &&<GridToolbarDensitySelector />}\r\n        {((!dontdisplay && gridxlxl) || fullscreen) &&<GridToolbarExport />}\r\n      </GridToolbarContainer>\r\n    );\r\n  }\r\n  return (\r\n    <div className={styles[\"usersandproduct\"]} >\r\n      {!loading ?\r\n      <> \r\n        {error && <h1 id={styles.errors}>{error}</h1> }\r\n        {productData&&<Box m=\"0 0 0 4%\" height={dontdisplay?\"75vh\":\"80vh\"} pt=\"2%\">\r\n          <DataGrid\r\n            rows={productData}\r\n            columns={columns}\r\n            pageSize={7}\r\n            rowsPerPageOptions={[7]}\r\n            checkboxSelection\r\n            components={{Toolbar:CustomToolbar, GridCell:{border:\"none\"}}}\r\n            // showColumnRightBorder={false}\r\n            disableSelectionOnClick={true}\r\n            sx={theme && {color:\"white\", \r\n            \"& .MuiDataGrid-cellCheckbox\":{outline:\"white\"},\r\n            \"& :rli:\":{outline:\"yellow\", color:\"black\"},\r\n            \"& .MuiCheckbox-colorPrimary\":{color:\"white\"},\r\n            \"& .css-levciy-MuiTablePagination-displayedRows\":{backgroundColor:\"#0e7878\",color:\"white\"},\r\n            \"& .MuiDataGrid-footerContainer\":{backgroundColor:\"#0e7878\",color:\"white\", borderTop:\"none\"},\r\n            \"& .css-78c6dr-MuiToolbar-root-MuiTablePagination-toolbar .MuiTablePagination-actions\":{color:\"white\"},\r\n            \"& .MuiDataGrid-cell\":{borderBottom:\"none\"},\r\n            \"& .css-1j9kmqg-MuiDataGrid-toolbarContainer\":{borderTop:\"none\", backgroundColor:\"#0e7878\", color:\"white\", gap:dontdisplay?\"0\":\"5%\", paddingLeft:\"1.5%\"},\r\n            \"& .css-1knaqv7-MuiButtonBase-root-MuiButton-root\":{ color:\"white\"},\r\n            \"& .css-1ptx2yq-MuiInputBase-root-MuiInput-root\":{ color:\"white\"},\r\n            \"& .MuiDataGrid-root .MuiDataGrid-root--densityStandard\":{borderBottom:\"none\"},\r\n            \"& .css-b1p1vf .MuiDataGrid-root \":{border:\"5px solid red \"},\r\n          }}\r\n            \r\n          />\r\n        </Box>}</>: <Loading />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AllProduct;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"usersandproduct\":\"usersandproducts_usersandproduct__dJTHJ\"};"],"names":["useState","productData","setproductData","deleteState","setdeleteState","loading","setLoading","error","setError","id","setdId","theme","useContext","ThemeData","screensizecontext","dontdisplay","gridlg","gridxl","gridxlxl","location","useLocation","fullscreen","pathname","includes","getData","axios","process","res","status","data","useEffect","window","columns","field","headerName","hide","filterable","width","undefined","flex","renderCell","params","src","row","image","m","p","diplay","justifyContent","gap","size","className","onClick","del","sx","color","ml","setdelete","url","type","document","title","styles","height","pt","rows","pageSize","rowsPerPageOptions","checkboxSelection","components","Toolbar","GridCell","border","disableSelectionOnClick","outline","backgroundColor","borderTop","borderBottom","paddingLeft"],"sourceRoot":""}