{"version":3,"file":"static/js/32.0425d92f.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/EmailOutlined.js","../node_modules/@kurkle/color/dist/color.esm.js","../node_modules/chart.js/src/helpers/helpers.core.ts","../node_modules/chart.js/src/helpers/helpers.math.ts","../node_modules/chart.js/src/helpers/helpers.collection.ts","../node_modules/chart.js/src/helpers/helpers.extras.ts","../node_modules/chart.js/src/helpers/helpers.easing.ts","../node_modules/chart.js/src/helpers/helpers.color.ts","../node_modules/chart.js/src/core/core.animations.defaults.js","../node_modules/chart.js/src/helpers/helpers.intl.ts","../node_modules/chart.js/src/core/core.ticks.js","../node_modules/chart.js/src/core/core.defaults.js","../node_modules/chart.js/src/core/core.layouts.defaults.js","../node_modules/chart.js/src/core/core.scale.defaults.js","../node_modules/chart.js/src/helpers/helpers.canvas.ts","../node_modules/chart.js/src/helpers/helpers.options.ts","../node_modules/chart.js/src/helpers/helpers.config.ts","../node_modules/chart.js/src/helpers/helpers.curve.ts","../node_modules/chart.js/src/helpers/helpers.dom.ts","../node_modules/chart.js/src/helpers/helpers.interpolation.ts","../node_modules/chart.js/src/helpers/helpers.rtl.ts","../node_modules/chart.js/src/helpers/helpers.segment.js","../node_modules/chart.js/src/core/core.animator.js","../node_modules/chart.js/src/core/core.animation.js","../node_modules/chart.js/src/core/core.animations.js","../node_modules/chart.js/src/core/core.datasetController.js","../node_modules/chart.js/src/controllers/controller.bar.js","../node_modules/chart.js/src/controllers/controller.bubble.js","../node_modules/chart.js/src/controllers/controller.doughnut.js","../node_modules/chart.js/src/controllers/controller.line.js","../node_modules/chart.js/src/controllers/controller.polarArea.js","../node_modules/chart.js/src/controllers/controller.pie.js","../node_modules/chart.js/src/controllers/controller.radar.js","../node_modules/chart.js/src/controllers/controller.scatter.js","../node_modules/chart.js/src/core/core.adapters.ts","../node_modules/chart.js/src/core/core.interaction.js","../node_modules/chart.js/src/core/core.layouts.js","../node_modules/chart.js/src/platform/platform.base.js","../node_modules/chart.js/src/platform/platform.basic.js","../node_modules/chart.js/src/platform/platform.dom.js","../node_modules/chart.js/src/core/core.element.ts","../node_modules/chart.js/src/core/core.scale.autoskip.js","../node_modules/chart.js/src/core/core.scale.js","../node_modules/chart.js/src/core/core.typedRegistry.js","../node_modules/chart.js/src/core/core.registry.js","../node_modules/chart.js/src/core/core.plugins.js","../node_modules/chart.js/src/core/core.config.js","../node_modules/chart.js/src/core/core.controller.js","../node_modules/chart.js/src/platform/index.js","../node_modules/chart.js/src/elements/element.arc.ts","../node_modules/chart.js/src/elements/element.line.js","../node_modules/chart.js/src/elements/element.point.ts","../node_modules/chart.js/src/elements/element.bar.js","../node_modules/chart.js/src/plugins/plugin.legend.js","../node_modules/chart.js/src/plugins/plugin.title.js","../node_modules/chart.js/src/plugins/plugin.subtitle.js","../node_modules/chart.js/src/plugins/plugin.tooltip.js","../node_modules/chart.js/src/scales/scale.category.js","../node_modules/chart.js/src/scales/scale.linearbase.js","../node_modules/chart.js/src/scales/scale.linear.js","../node_modules/chart.js/src/scales/scale.logarithmic.js","../node_modules/chart.js/src/scales/scale.radialLinear.js","../node_modules/chart.js/src/scales/scale.time.js","../node_modules/chart.js/src/scales/scale.timeseries.js","../node_modules/react-chartjs-2/src/utils.ts","../node_modules/react-chartjs-2/src/chart.tsx","../node_modules/react-chartjs-2/src/typedCharts.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M22 6c0-1.1-.9-2-2-2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6zm-2 0-8 5-8-5h16zm0 12H4V8l8 5 8-5v10z\"\n}), 'EmailOutlined');\nexports.default = _default;","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || typeof value === 'undefined';\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): any {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>(items);\n\n  if (set.size === items.length) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n\n    // When datasets have values approaching Number.MAX_VALUE, the tick calculations might result in\n    // infinity and eventually NaN. Passing NaN for minimumFractionDigits or maximumFractionDigits\n    // will make the number formatter throw. So instead we check for isNaN and use a fallback value.\n    //\n    // toFixed has a max of 20 decimal places\n    const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import type {\n  Chart,\n  Point,\n  FontSpec,\n  CanvasFontSpec,\n  PointStyle,\n  RenderTextOpts,\n  BackdropOptions\n} from '../types/index.js';\nimport type {\n  TRBL,\n  SplinePoint,\n  RoundedRect,\n  TRBLCorners\n} from '../types/geometric.js';\nimport {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font: FontSpec) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(\n  ctx: CanvasRenderingContext2D,\n  data: Record<string, number>,\n  gc: string[],\n  longest: number,\n  string: string\n) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\ntype Thing = string | undefined | null\ntype Things = (Thing | Thing[])[]\n\n/**\n * @private\n */\n// eslint-disable-next-line complexity\nexport function _longestText(\n  ctx: CanvasRenderingContext2D,\n  font: string,\n  arrayOfThings: Things,\n  cache?: {data?: Record<string, number>, garbageCollect?: string[], font?: string}\n) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i: number, j: number, jlen: number, thing: Thing | Thing[], nestedThing: Thing | Thing[];\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && !isArray(thing)) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart: Chart, pixel: number, width: number) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n */\nexport function clearCanvas(canvas: HTMLCanvasElement, ctx?: CanvasRenderingContext2D) {\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport interface DrawPointOptions {\n  pointStyle: PointStyle;\n  rotation?: number;\n  radius: number;\n  borderWidth: number;\n}\n\nexport function drawPoint(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number\n) {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  drawPointLegend(ctx, options, x, y, null);\n}\n\n// eslint-disable-next-line complexity\nexport function drawPointLegend(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number,\n  w: number\n) {\n  let type: string, xOffset: number, yOffset: number, size: number, cornerRadius: number, width: number, xOffsetW: number, yOffsetW: number;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n    default:\n      if (w) {\n        ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n      } else {\n        ctx.arc(x, y, radius, 0, TAU);\n      }\n      ctx.closePath();\n      break;\n    case 'triangle':\n      width = w ? w / 2 : radius;\n      ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      ctx.closePath();\n      break;\n    case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n      cornerRadius = radius * 0.516;\n      size = radius - cornerRadius;\n      xOffset = Math.cos(rad + QUARTER_PI) * size;\n      xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      yOffset = Math.sin(rad + QUARTER_PI) * size;\n      yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n      ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n      ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n      ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n      ctx.closePath();\n      break;\n    case 'rect':\n      if (!rotation) {\n        size = Math.SQRT1_2 * radius;\n        width = w ? w / 2 : size;\n        ctx.rect(x - width, y - size, 2 * width, 2 * size);\n        break;\n      }\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'rectRot':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      ctx.closePath();\n      break;\n    case 'crossRot':\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'cross':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'star':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      rad += QUARTER_PI;\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'line':\n      xOffset = w ? w / 2 : Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      break;\n    case 'dash':\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n      break;\n    case false:\n      ctx.closePath();\n      break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */\nexport function _isPointInArea(\n  point: Point,\n  area: TRBL,\n  margin?: number\n) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx: CanvasRenderingContext2D, area: TRBL) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx: CanvasRenderingContext2D) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(\n  ctx: CanvasRenderingContext2D,\n  previous: Point,\n  target: Point,\n  flip?: boolean,\n  mode?: string\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(\n  ctx: CanvasRenderingContext2D,\n  previous: SplinePoint,\n  target: SplinePoint,\n  flip?: boolean\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\nfunction setRenderOpts(ctx: CanvasRenderingContext2D, opts: RenderTextOpts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  line: string,\n  opts: RenderTextOpts\n) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx: CanvasRenderingContext2D, opts: BackdropOptions) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color as string;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(\n  ctx: CanvasRenderingContext2D,\n  text: string | string[],\n  x: number,\n  y: number,\n  font: CanvasFontSpec,\n  opts: RenderTextOpts = {}\n) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i: number, line: string;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += Number(font.lineHeight);\n  }\n\n  ctx.restore();\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */\nexport function addRoundedRectPath(\n  ctx: CanvasRenderingContext2D,\n  rect: RoundedRect & { radius: TRBLCorners }\n) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec, Point} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartMeta} from '../types/index.js';\nimport type {\n  ResolverObjectKey,\n  ResolverCache,\n  ResolverProxy,\n  DescriptorDefaults,\n  Descriptor,\n  ContextCache,\n  ContextProxy\n} from './helpers.config.types.js';\nimport {isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\nexport * from './helpers.config.types.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  scopes: T,\n  prefixes = [''],\n  rootScopes?: R,\n  fallback?: ResolverObjectKey,\n  getTarget = () => scopes[0]\n) {\n  const finalRootScopes = rootScopes || scopes;\n  if (typeof fallback === 'undefined') {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache: ResolverCache<T, R> = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: finalRootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope: AnyObject) => _createResolver([scope, ...scopes], prefixes, finalRootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop: string) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop: string) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop: string, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  }) as ResolverProxy<T, R>;\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */\nexport function _attachContext<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  proxy: ResolverProxy<T, R>,\n  context: AnyObject,\n  subProxy?: ResolverProxy<T, R>,\n  descriptorDefaults?: DescriptorDefaults\n) {\n  const cache: ContextCache<T, R> = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx: AnyObject) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope: AnyObject) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  }) as ContextProxy<T, R>;\n}\n\n/**\n * @private\n */\nexport function _descriptors(\n  proxy: ResolverCache,\n  defaults: DescriptorDefaults = {scriptable: true, indexable: true}\n): Descriptor {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix: string, name: string) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop: string, value: unknown) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(\n  target: AnyObject,\n  prop: string,\n  resolve: () => unknown\n) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(\n  target: ContextCache,\n  prop: string,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(\n  prop: string,\n  getValue: (ctx: AnyObject, sub: AnyObject) => unknown,\n  target: ContextCache,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  let value = getValue(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(\n  prop: string,\n  value: unknown[],\n  target: ContextCache,\n  isIndexable: (key: string) => boolean\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n    return value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(\n  fallback: ResolverObjectKey | ((prop: ResolverObjectKey, value: unknown) => ResolverObjectKey),\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key: ResolverObjectKey, parent: AnyObject) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(\n  set: Set<AnyObject>,\n  parentScopes: AnyObject[],\n  key: ResolverObjectKey,\n  parentFallback: ResolverObjectKey,\n  value: unknown\n) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(\n  parentScopes: AnyObject[],\n  resolver: ResolverCache,\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set<AnyObject>();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (typeof fallback !== 'undefined' && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop as string, value));\n}\n\nfunction addScopesFromKey(\n  set: Set<AnyObject>,\n  allScopes: AnyObject[],\n  key: ResolverObjectKey,\n  fallback: ResolverObjectKey,\n  item: unknown\n) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(\n  resolver: ResolverCache,\n  prop: string,\n  value: unknown\n) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(\n  prop: string,\n  prefixes: string[],\n  scopes: AnyObject[],\n  proxy: ResolverProxy\n) {\n  let value: unknown;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (typeof value !== 'undefined') {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key: string, scopes: AnyObject[]) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target: ResolverCache) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes: AnyObject[]) {\n  const set = new Set<string>();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(\n  meta: ChartMeta<'line' | 'scatter'>,\n  data: AnyObject[],\n  start: number,\n  count: number\n) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array<{r: unknown}>(count);\n  let i: number, ilen: number, index: number, item: AnyObject;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\nimport type {SplinePoint} from '../types/geometric.js';\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import type {ChartArea, Scale} from '../types/index.js';\nimport type Chart from '../core/core.controller.js';\nimport type {ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  chart.height = Math.floor(chart.height);\n  chart.width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import type {Point, SplinePoint} from '../types/geometric.js';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math.js';\nimport {createContext} from './helpers.options.js';\nimport {isPatternOrGradient} from './helpers.color.js';\n\n/**\n * @typedef { import('../elements/element.line.js').default } LineElement\n * @typedef { import('../elements/element.point.js').default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  if (!prevStyle) {\n    return false;\n  }\n  const cache = [];\n  const replacer = function(key, value) {\n    if (!isPatternOrGradient(value)) {\n      return value;\n    }\n    if (!cache.includes(value)) {\n      cache.push(value);\n    }\n    return cache.indexOf(value);\n  };\n  return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n","import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (an thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal meta data accordingly.\n\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {valueOrDefault} from '../helpers/helpers.core.js';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash'),\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {_parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('../types/index.js').Chart } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  /** @type {CanvasTextAlign} */\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = /** @type {string} */ (label[j]);\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, ...scaleOptions) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n  for (const opts of scaleOptions) {\n    const axis = opts.axis\n      || axisFromPosition(opts.position)\n      || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n    if (axis) {\n      return axis;\n    }\n  }\n  throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {axis};\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    const boundDs = config.data.datasets.filter((d) => d.xAxisID === id || d.yAxisID === id);\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getDatasetArea(meta) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: xScale.left,\n      right: xScale.right,\n      top: yScale.top,\n      bottom: yScale.bottom\n    };\n  }\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta) || this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the envent inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle, borderDash, borderDashOffset} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  ctx.setLineDash(borderDash || []);\n  ctx.lineDashOffset = borderDashOffset;\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @returns {any}\n */\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColor = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.fillStyle = labelColor.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : (labelColor.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.setLineDash(labelColor.borderDash || []);\n      ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColor.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n    ticks.push({value: tickValue});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction createPointLabelItem(scale, index, itemOpts) {\n  const outerDistance = scale.drawingArea;\n  const {extra, additionalAngle, padding, size} = itemOpts;\n  const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n  const y = yForAngle(pointLabelPosition.y, size.h, angle);\n  const textAlign = getTextAlignForAngle(angle);\n  const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    // if to draw or overlapped\n    visible: true,\n\n    // Text position\n    x: pointLabelPosition.x,\n    y,\n\n    // Text rendering data\n    textAlign,\n\n    // Bounding box\n    left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\n\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n  const {left, top, right, bottom} = item;\n  const apexesInArea = _isPointInArea({x: left, y: top}, area) || _isPointInArea({x: left, y: bottom}, area) ||\n    _isPointInArea({x: right, y: top}, area) || _isPointInArea({x: right, y: bottom}, area);\n  return !apexesInArea;\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const {centerPointLabels, display} = opts.pointLabels;\n  const itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\n  };\n  let area;\n\n  for (let i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n\n    const item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabelBox(ctx, opts, item) {\n  const {left, top, right, bottom} = item;\n  const {backdropColor} = opts;\n\n  if (!isNullOrUndef(backdropColor)) {\n    const borderRadius = toTRBLCorners(opts.borderRadius);\n    const padding = toPadding(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n\n    const backdropLeft = left - padding.left;\n    const backdropTop = top - padding.top;\n    const backdropWidth = right - left + padding.width;\n    const backdropHeight = bottom - top + padding.height;\n\n    if (Object.values(borderRadius).some(v => v !== 0)) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius,\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const item = scale._pointLabelItems[i];\n    if (!item.visible) {\n      // overlapping\n      continue;\n    }\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign} = item;\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if its not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @private\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guesstimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time.js';\nimport {_lookupByKey} from '../helpers/helpers.collection.js';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","import type { MouseEvent } from 'react';\nimport type {\n  ChartType,\n  ChartData,\n  DefaultDataPoint,\n  ChartDataset,\n  ChartOptions,\n  Chart,\n} from 'chart.js';\n\nimport type { ForwardedRef } from './types.js';\n\nconst defaultDatasetIdKey = 'label';\n\nexport function reforwardRef<T>(ref: ForwardedRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}\n\nexport function setOptions<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(chart: Chart<TType, TData, TLabel>, nextOptions: ChartOptions<TType>) {\n  const options = chart.options;\n\n  if (options && nextOptions) {\n    Object.assign(options, nextOptions);\n  }\n}\n\nexport function setLabels<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextLabels: TLabel[] | undefined\n) {\n  currentData.labels = nextLabels;\n}\n\nexport function setDatasets<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextDatasets: ChartDataset<TType, TData>[],\n  datasetIdKey = defaultDatasetIdKey\n) {\n  const addedDatasets: ChartDataset<TType, TData>[] = [];\n\n  currentData.datasets = nextDatasets.map(\n    (nextDataset: Record<string, unknown>) => {\n      // given the new set, find it's current match\n      const currentDataset = currentData.datasets.find(\n        (dataset: Record<string, unknown>) =>\n          dataset[datasetIdKey] === nextDataset[datasetIdKey]\n      );\n\n      // There is no original to update, so simply add new one\n      if (\n        !currentDataset ||\n        !nextDataset.data ||\n        addedDatasets.includes(currentDataset)\n      ) {\n        return { ...nextDataset } as ChartDataset<TType, TData>;\n      }\n\n      addedDatasets.push(currentDataset);\n\n      Object.assign(currentDataset, nextDataset);\n\n      return currentDataset;\n    }\n  );\n}\n\nexport function cloneData<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(data: ChartData<TType, TData, TLabel>, datasetIdKey = defaultDatasetIdKey) {\n  const nextData: ChartData<TType, TData, TLabel> = {\n    labels: [],\n    datasets: [],\n  };\n\n  setLabels(nextData, data.labels);\n  setDatasets(nextData, data.datasets, datasetIdKey);\n\n  return nextData;\n}\n\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getDatasetAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'dataset',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'nearest',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementsAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'index',\n    { intersect: true },\n    false\n  );\n}\n","import React, { useEffect, useRef, forwardRef } from 'react';\nimport { Chart as ChartJS } from 'chart.js';\nimport type { ChartType, DefaultDataPoint } from 'chart.js';\n\nimport type { ForwardedRef, ChartProps, BaseChartComponent } from './types.js';\nimport {\n  reforwardRef,\n  cloneData,\n  setOptions,\n  setLabels,\n  setDatasets,\n} from './utils.js';\n\nfunction ChartComponent<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  props: ChartProps<TType, TData, TLabel>,\n  ref: ForwardedRef<ChartJS<TType, TData, TLabel>>\n) {\n  const {\n    height = 150,\n    width = 300,\n    redraw = false,\n    datasetIdKey,\n    type,\n    data,\n    options,\n    plugins = [],\n    fallbackContent,\n    updateMode,\n    ...canvasProps\n  } = props as ChartProps;\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const chartRef = useRef<ChartJS | null>();\n\n  const renderChart = () => {\n    if (!canvasRef.current) return;\n\n    chartRef.current = new ChartJS(canvasRef.current, {\n      type,\n      data: cloneData(data, datasetIdKey),\n      options: options && { ...options },\n      plugins,\n    });\n\n    reforwardRef(ref, chartRef.current);\n  };\n\n  const destroyChart = () => {\n    reforwardRef(ref, null);\n\n    if (chartRef.current) {\n      chartRef.current.destroy();\n      chartRef.current = null;\n    }\n  };\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && options) {\n      setOptions(chartRef.current, options);\n    }\n  }, [redraw, options]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current) {\n      setLabels(chartRef.current.config.data, data.labels);\n    }\n  }, [redraw, data.labels]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && data.datasets) {\n      setDatasets(chartRef.current.config.data, data.datasets, datasetIdKey);\n    }\n  }, [redraw, data.datasets]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    if (redraw) {\n      destroyChart();\n      setTimeout(renderChart);\n    } else {\n      chartRef.current.update(updateMode);\n    }\n  }, [redraw, options, data.labels, data.datasets, updateMode]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    destroyChart();\n    setTimeout(renderChart);\n  }, [type]);\n\n  useEffect(() => {\n    renderChart();\n\n    return () => destroyChart();\n  }, []);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      role='img'\n      height={height}\n      width={width}\n      {...canvasProps}\n    >\n      {fallbackContent}\n    </canvas>\n  );\n}\n\nexport const Chart = forwardRef(ChartComponent) as BaseChartComponent;\n","import React, { forwardRef } from 'react';\nimport {\n  Chart as ChartJS,\n  LineController,\n  BarController,\n  RadarController,\n  DoughnutController,\n  PolarAreaController,\n  BubbleController,\n  PieController,\n  ScatterController,\n} from 'chart.js';\nimport type { ChartType, ChartComponentLike } from 'chart.js';\n\nimport type {\n  ChartProps,\n  ChartJSOrUndefined,\n  TypedChartComponent,\n} from './types.js';\nimport { Chart } from './chart.js';\n\nfunction createTypedChart<T extends ChartType>(\n  type: T,\n  registerables: ChartComponentLike\n) {\n  ChartJS.register(registerables);\n\n  return forwardRef<ChartJSOrUndefined<T>, Omit<ChartProps<T>, 'type'>>(\n    (props, ref) => <Chart {...props} ref={ref} type={type} />\n  ) as TypedChartComponent<T>;\n}\n\nexport const Line = /* #__PURE__ */ createTypedChart('line', LineController);\n\nexport const Bar = /* #__PURE__ */ createTypedChart('bar', BarController);\n\nexport const Radar = /* #__PURE__ */ createTypedChart('radar', RadarController);\n\nexport const Doughnut = /* #__PURE__ */ createTypedChart(\n  'doughnut',\n  DoughnutController\n);\n\nexport const PolarArea = /* #__PURE__ */ createTypedChart(\n  'polarArea',\n  PolarAreaController\n);\n\nexport const Bubble = /* #__PURE__ */ createTypedChart(\n  'bubble',\n  BubbleController\n);\n\nexport const Pie = /* #__PURE__ */ createTypedChart('pie', PieController);\n\nexport const Scatter = /* #__PURE__ */ createTypedChart(\n  'scatter',\n  ScatterController\n);\n"],"names":["_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","e","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","undefined","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","rgb2hsl","hueValue","calln","Array","isArray","map","hsl2rgb","hue","hueParse","str","m","exec","p1","p2","hwb2rgb","hsv2rgb","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","keys","Object","tkeys","j","ok","nk","length","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","pow","from","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","charAt","rgbParse","Color","constructor","type","ret","len","hexParse","this","_rgb","_valid","valid","obj","rgbString","hslString","mix","color","weight","c1","c2","w2","p","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","noop","uid","id","isNullOrUndef","value","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","resolveObjectKey","resolver","parts","split","part","push","_splitKey","_getKeyResolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","niceRange","floor","fraction","isNumber","isNaN","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","isFiniteNumber","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","splice","forEach","_arrayUnique","items","set","Set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","_toLeftRightCenter","align","_alignStartEnd","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","getNumberFormat","format","formatters","values","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","overrides","descriptors","getScope","node","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","appliers","_scriptable","startsWith","_indexable","_fallback","defaults","delay","duration","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","right","bottom","left","display","offset","beginAtZero","bounds","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","Ticks","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","decorateText","line","opts","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","fillStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","translation","textAlign","textBaseline","setRenderOpts","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","getTarget","finalRootScopes","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","getValue","Error","join","add","delete","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","parent","addScopes","parentScopes","parentFallback","rootScopes","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","result","pos","useOffsetPos","shadowRoot","getRelativePosition","event","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","splitByStyles","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","remove","interpolators","boolean","factor","c0","helpersColor","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","res","rej","resolved","method","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","animator","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","adata","convertObjectDataToArray","isExtensible","defineProperty","base","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","sort","getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","BarController","iAxisKey","vAxisKey","super","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","grouped","skipNull","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","categoryPercentage","barPercentage","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","_index_","_value_","BubbleController","DoughnutController","innerRadius","outerRadius","getter","_getRotation","_getCircumference","circumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PolarAreaController","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","abstract","DateAdapterBase","members","init","formats","diff","startOf","endOf","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","callCallback","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","scaleOptions","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","Interaction","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","parseBorderRadius","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","inner","lineJoin","angleMargin","clipArc","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","findStartAndEnd","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","_element","_args","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","titleBlock","createTitle","WeakMap","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","afterInit","afterDraw","findOrAddLabel","addedLabels","unshift","addIfString","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","minExp","exp","startExp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","updateLimits","setCenterPoint","_pointLabelItems","itemOpts","extra","createPointLabelItem","isNotOverlapped","buildPointLabelItems","hLimits","vLimits","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine","animate","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","_unit","_majorUnit","_offsets","_normalized","adapters","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","defaultDatasetIdKey","reforwardRef","ref","setLabels","currentData","nextLabels","setDatasets","nextDatasets","datasetIdKey","addedDatasets","nextDataset","currentDataset","find","cloneData","nextData","ChartComponent","redraw","fallbackContent","updateMode","canvasProps","canvasRef","useRef","chartRef","renderChart","ChartJS","destroyChart","useEffect","nextOptions","setOptions","React","role","forwardRef","createTypedChart","registerables","Line","Bar","Pie"],"sourceRoot":""}